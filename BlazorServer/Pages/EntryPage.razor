@page "/"
@using BlazorServer.Data.Helpers
@inject LoginManager manager
@inject NavigationManager NavigationManager
@inject LoginSession loginSession;
@inject CookiesManager cookiesManager;

@if (loginSession.currentUser is null)
{
    <div class="form-group">
        <label>
            User:<input @bind="userInput" />
        </label>
    </div>

    <div class="form-group">
        <label>
            Password:<input @bind="passwordInput" />
        </label>
    </div>
    <button @onclick="Login">Login</button>
    <button @onclick="Register">Register</button>
}
else
{
    <div class="alert alert-info">
        <p>Welcome, @loginSession.currentUser.username</p>
    </div>
    <button @onclick="Logout">Logout</button>
}


@if (!string.IsNullOrEmpty(loginMessage))
{
    <div class="alert alert-info">
        @loginMessage
    </div>
}

@code {
    private string? userInput;
    private string? passwordInput;
    private string? loginMessage;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var session = await cookiesManager.GetCookie<LoginSession>("boring-media-cookie");
            if (session is not null)
            {
                loginSession.currentUser = session.currentUser;
                loginSession.IsUserLoggedIn = session.IsUserLoggedIn;
                StateHasChanged();
                loginSession?.IvokeMenuUpdate();
            }
        }
    }

    private async Task Login()
    {
        if (userInput is not null && passwordInput is not null)
        {                   
            if (loginSession.Login(userInput, passwordInput,manager))
            {
               await cookiesManager.SetCookie<LoginSession>(loginSession, "boring-media-cookie");                  
               NavigationManager.NavigateTo("/chat"); // Redirect to chat page
            }
            else
            {
                loginMessage = "Login failed. Please check your credentials.";
            }
            CleanUp();
        }
    }

    private async Task Logout()
    {
        loginSession.Logout();
        await cookiesManager.DeleteCookie("boring-media-cookie");
    }

    private void Register()
    {
        if (userInput is not null && passwordInput is not null)
        {
            manager.Register(userInput, passwordInput);
            CleanUp();
        }
    }

    private void CleanUp()
    {
        userInput = null;
        passwordInput = null;
    }

}

